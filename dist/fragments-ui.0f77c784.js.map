{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-3a2400c7584a469e.js","src/app.js","src/auth.js","src/config.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/api.js","src/db.js","src/sw-register.js","node_modules/@parcel/runtime-js/lib/runtime-748a52c97e69c5e2.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 1234;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"9440bf780f77c784\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","import { login, logout, handleCallback, isAuthenticated } from './auth';\nimport { listFragments, createFragment, deleteFragment, updateFragment, getFragmentData, getFragmentInfo } from './api';\nimport fragmentDB from './db.js';\nimport { registerServiceWorker, setupInstallPrompt } from './sw-register.js';\n\n\n\n// PWA and offline support\nlet isOnline = navigator.onLine;\nlet offlineActions = [];\nlet syncInProgress = false;\n\nconst conversionTargets = {\n  'text/plain': ['text/plain'], // Only allow same format - no conversions\n  'text/markdown': ['text/markdown', 'text/html', 'text/plain'],\n  'text/html': ['text/html', 'text/plain'], // No conversion to markdown\n  'text/csv': ['text/csv', 'text/plain', 'application/json'],\n  'application/json': ['application/json', 'application/yaml', 'text/plain'],\n  'application/yaml': ['application/yaml', 'text/plain'],\n  'image/png': ['image/png', 'image/jpeg', 'image/webp', 'image/avif'], // No gif conversion\n  'image/jpeg': ['image/png', 'image/jpeg', 'image/webp', 'image/avif'],\n  'image/webp': ['image/png', 'image/jpeg', 'image/webp', 'image/avif'],\n  'image/gif': ['image/png', 'image/jpeg', 'image/webp', 'image/avif'],\n  'image/avif': ['image/png', 'image/jpeg', 'image/webp', 'image/avif'],\n};\n\nfunction getExtensionForType(type) {\n  const parts = type.split('/');\n  if (parts[0] === 'image') return parts[1];\n  if (parts[0] === 'text' && parts[1] === 'plain') return 'txt';\n  if (parts[0] === 'text' && parts[1] === 'markdown') return 'md';\n  if (parts[0] === 'text' && parts[1] === 'html') return 'html';\n  if (parts[0] === 'text' && parts[1] === 'csv') return 'csv';\n  if (parts[0] === 'application' && parts[1] === 'json') return 'json';\n  if (parts[0] === 'application' && parts[1] === 'yaml') return 'yaml';\n  return '';\n}\n\n// Enhanced conversion mapping that matches backend exactly\nfunction getConversionExtension(sourceType, targetType) {\n  // Handle image conversions\n  if (sourceType.startsWith('image/')) {\n    if (targetType === 'image/png') return 'png';\n    if (targetType === 'image/jpeg') return 'jpg';\n    if (targetType === 'image/webp') return 'webp';\n    if (targetType === 'image/avif') return 'avif';\n    return '';\n  }\n  \n  // Handle text conversions - only allow supported conversions\n  if (sourceType.startsWith('text/')) {\n    if (targetType === 'text/plain') return 'txt';\n    if (targetType === 'text/markdown') return 'md';\n    if (targetType === 'text/html') return 'html';\n    if (targetType === 'text/csv') return 'csv';\n    if (targetType === 'application/json') return 'json';\n    if (targetType === 'application/yaml') return 'yaml';\n    return '';\n  }\n  \n  // Handle application conversions - only allow supported conversions\n  if (sourceType.startsWith('application/')) {\n    if (targetType === 'application/json') return 'json';\n    if (targetType === 'application/yaml') return 'yaml';\n    if (targetType === 'text/plain') return 'txt';\n    // Remove unsupported conversions\n    return '';\n  }\n  \n  return '';\n}\n\n// PWA Offline Support Functions\nfunction updateOfflineStatus() {\n  const offlineIndicator = document.getElementById('offline-indicator');\n  const onlineStatus = document.getElementById('online-status');\n  const offlineStatus = document.getElementById('offline-status');\n  const offlineWarning = document.getElementById('offline-warning');\n  \n  if (isOnline) {\n    document.body.classList.remove('offline');\n    if (offlineIndicator) offlineIndicator.classList.add('hidden');\n    if (offlineWarning) offlineWarning.classList.add('hidden');\n    if (onlineStatus) onlineStatus.classList.remove('hidden');\n    if (offlineStatus) offlineStatus.classList.add('hidden');\n  } else {\n    document.body.classList.add('offline');\n    if (offlineIndicator) offlineIndicator.classList.remove('hidden');\n    if (offlineWarning) offlineWarning.classList.remove('hidden');\n    if (onlineStatus) onlineStatus.classList.add('hidden');\n    if (offlineStatus) offlineStatus.classList.remove('hidden');\n  }\n}\n\nasync function addOfflineAction(action) {\n  try {\n    console.log('🔄 Adding offline action:', action);\n    await fragmentDB.addOfflineAction(action);\n    offlineActions.push(action);\n    console.log('✅ Action queued for offline sync:', action);\n    \n    // Debug: check if action was actually stored\n    const storedActions = await fragmentDB.getOfflineActions();\n    console.log('📋 Current offline actions after adding:', storedActions);\n  } catch (error) {\n    console.error('❌ Failed to queue offline action:', error);\n  }\n}\n\nasync function syncOfflineActions() {\n  if (syncInProgress) {\n    console.log('Sync already in progress, skipping...');\n    return;\n  }\n  \n  // Check if we have offline actions first\n  const actions = await fragmentDB.getOfflineActions();\n  console.log('🔍 Found offline actions:', actions);\n  \n  if (actions.length === 0) {\n    console.log('No offline actions to sync');\n    return;\n  }\n  \n  console.log(`🚀 Starting offline sync for ${actions.length} actions...`);\n  console.log('📡 Current online status:', isOnline);\n  syncInProgress = true;\n  \n  try {\n    for (const action of actions) {\n      try {\n        console.log(`Processing action: ${action.type}`, action);\n        let actionSuccessful = false;\n        \n        switch (action.type) {\n          case 'CREATE':\n            await createFragment(action.data.content, action.data.type);\n            actionSuccessful = true;\n            break;\n          case 'UPDATE':\n            await updateFragment(action.data.id, action.data.content, action.data.type);\n            actionSuccessful = true;\n            break;\n          case 'DELETE':\n            try {\n              await deleteFragment(action.data.id);\n              actionSuccessful = true;\n            } catch (deleteError) {\n              // Special handling for DELETE actions that get 404\n              if (deleteError.status === 404 || (deleteError.message && deleteError.message.includes('404'))) {\n                console.log(`✅ Fragment already deleted (404) - marking DELETE action as successful`);\n                actionSuccessful = true; // Fragment is already gone, so DELETE action succeeded\n              } else {\n                throw deleteError; // Re-throw other errors\n              }\n            }\n            break;\n        }\n        \n        if (actionSuccessful) {\n          await fragmentDB.removeOfflineAction(action.id);\n          console.log(`✅ Successfully synced action: ${action.type}`);\n        }\n      } catch (error) {\n        console.error(`❌ Failed to sync action: ${action.type}`, action, error);\n        \n        // Check if this is a retryable error\n        const isRetryable = !(error.status === 404) && !error.message?.includes('404') && !error.message?.includes('Not Found');\n        \n        if (isRetryable && action.retryCount < 3) {\n          action.retryCount = (action.retryCount || 0) + 1;\n          console.log(`Retrying action ${action.type} (attempt ${action.retryCount})`);\n          \n          // Remove the old action first to avoid IndexedDB constraint errors\n          try {\n            await fragmentDB.removeOfflineAction(action.id);\n            await fragmentDB.addOfflineAction(action);\n          } catch (dbError) {\n            console.error(`Failed to update retry count for action ${action.type}:`, dbError);\n            // If we can't update the retry count, just remove the action\n            await fragmentDB.removeOfflineAction(action.id);\n          }\n        } else {\n          console.log(`Action ${action.type} failed - removing from queue (not retryable or max retries reached)`);\n          await fragmentDB.removeOfflineAction(action.id);\n        }\n      }\n    }\n    \n    console.log('🎉 Offline sync completed');\n  } catch (error) {\n    console.error('💥 Offline sync failed:', error);\n  } finally {\n    syncInProgress = false;\n  }\n}\n\nasync function renderFragments() {\n  console.log('Available conversion targets:', conversionTargets);\n  \n  const fragmentsList = document.getElementById('fragments-list');\n  fragmentsList.innerHTML = '';\n  \n  try {\n    let fragments = [];\n    \n    if (isOnline) {\n      // Try to get fragments from API\n      try {\n        const response = await listFragments(true);\n        fragments = response.data?.fragments || response.fragments || [];\n        \n        // Cache fragments locally\n        for (const fragment of fragments) {\n          await fragmentDB.saveFragment(fragment);\n        }\n      } catch (error) {\n        console.log('API failed, using cached fragments');\n        fragments = await fragmentDB.getAllFragments();\n      }\n    } else {\n      // Offline mode - use cached fragments\n      fragments = await fragmentDB.getAllFragments();\n    }\n\n    if (fragments.length === 0) {\n      fragmentsList.innerHTML = '<li>No fragments found.</li>';\n      return;\n    }\n\n    // Store fragments globally for access in event handlers\n    window.currentFragments = fragments;\n\n    fragments.forEach(fragment => {\n      const li = document.createElement('li');\n      // Parse the fragment type correctly, handling both full type and mimeType\n      let type = fragment.type;\n      if (type && type.includes(';')) {\n        // Handle types like \"text/plain; charset=utf-8\"\n        type = type.split(';')[0].trim();\n      }\n      \n      const targets = conversionTargets[type] || [];\n      console.log('Fragment type:', fragment.type, 'Parsed type:', type, 'Available targets:', targets);\n      \n      // Generate dropdown options manually to ensure they're created\n      let dropdownOptions = '';\n      if (targets && targets.length > 0) {\n        targets.forEach(target => {\n          dropdownOptions += `<option value=\"${target}\">${target}</option>`;\n        });\n        console.log('Generated dropdown options:', dropdownOptions);\n      } else {\n        console.warn('No targets found for type:', type);\n        dropdownOptions = `<option value=\"${type}\">${type}</option>`;\n      }\n      \n      li.innerHTML = `\n        <div class=\"fragment-header\">\n          <div class=\"fragment-info\">\n            <div class=\"fragment-id\">${fragment.id}</div>\n            <div class=\"fragment-type\">${fragment.type}</div>\n            <div class=\"fragment-meta\">\n              <span>📏 ${fragment.size} bytes</span>\n              <span>📅 Created: ${new Date(fragment.created).toLocaleString()}</span>\n              <span>🔄 Updated: ${new Date(fragment.updated).toLocaleString()}</span>\n            </div>\n          </div>\n          <div class=\"fragment-actions\">\n            <button class=\"btn btn-danger delete-btn\" data-id=\"${fragment.id}\">🗑️ Delete</button>\n            <button class=\"btn btn-warning edit-btn\" data-id=\"${fragment.id}\" data-type=\"${fragment.type}\">✏️ Edit</button>\n          </div>\n        </div>\n        <div class=\"fragment-conversion\">\n          <span>🔄 Convert to:</span>\n          <select class=\"conversion-select\" data-id=\"${fragment.id}\">\n            ${dropdownOptions}\n          </select>\n          <button class=\"btn btn-success view-convert-btn\" data-id=\"${fragment.id}\">👁️ View Converted</button>\n        </div>\n      `;\n      \n      // Add manual sync button if there are offline actions\n      if (window.offlineActions && window.offlineActions.length > 0) {\n        const syncButton = document.createElement('button');\n        syncButton.textContent = `🔄 Sync ${window.offlineActions.length} Offline Actions`;\n        syncButton.className = 'btn btn-warning';\n        syncButton.style.marginTop = '10px';\n        syncButton.onclick = () => {\n          console.log('Manual sync triggered');\n          syncOfflineActions();\n        };\n        li.appendChild(syncButton);\n      }\n      \n      console.log('Final HTML for fragment:', fragment.id, ':', li.innerHTML);\n      fragmentsList.appendChild(li);\n    });\n\n    // Delete\n    fragmentsList.querySelectorAll('.delete-btn').forEach(button => {\n      button.onclick = async (e) => {\n        const id = e.target.dataset.id;\n        try {\n          if (isOnline) {\n            console.log('🌐 Online mode - deleting fragment directly');\n            await deleteFragment(id);\n          } else {\n            console.log('📱 Offline mode - queuing delete action');\n            // Offline mode - queue for sync\n            await addOfflineAction({\n              type: 'DELETE',\n              data: { id }\n            });\n            alert('Delete queued for sync when online!');\n          }\n          \n          // Remove from local cache\n          await fragmentDB.deleteFragment(id);\n          await renderFragments();\n        } catch (err) {\n          alert(`Delete failed: ${err.message}`);\n          console.error(err);\n        }\n      };\n    });\n\n    // Edit\n    fragmentsList.querySelectorAll('.edit-btn').forEach(button => {\n      button.onclick = async (e) => {\n        const id = e.target.dataset.id;\n        const currentType = e.target.dataset.type;\n        try {\n          let current;\n          \n          if (isOnline) {\n            const resp = await getFragmentData(id);\n            current = await resp.text();\n          } else {\n            // Offline mode - get from cache\n            const fragment = await fragmentDB.getFragment(id);\n            current = fragment?._data || 'Content not available offline';\n          }\n          \n          const newContent = prompt(`Edit content for ${id}`, current);\n          if (newContent === null) return;\n          const newType = prompt('Update type (leave as current if unsure):', currentType) || currentType;\n          \n          if (isOnline) {\n            await updateFragment(id, newContent, newType);\n          } else {\n            // Offline mode - queue for sync\n            await addOfflineAction({\n              type: 'UPDATE',\n              data: { id, content: newContent, type: newType }\n            });\n            alert('Update queued for sync when online!');\n          }\n          \n          await renderFragments();\n        } catch (err) {\n          alert(`Update failed: ${err.message}`);\n          console.error(err);\n        }\n      };\n    });\n\n    // Convert/View\n    fragmentsList.querySelectorAll('.view-convert-btn').forEach(button => {\n      button.onclick = async (e) => {\n        const id = e.target.dataset.id;\n        const select = e.target.previousElementSibling; // the select\n        const targetType = select.value;\n        \n        // Find the fragment to get its source type\n        const fragment = window.currentFragments.find(f => f.id === id);\n        if (!fragment) {\n          alert('Fragment not found');\n          return;\n        }\n        \n        const sourceType = fragment.type.split(';')[0]; // Remove charset if present\n        const ext = getConversionExtension(sourceType, targetType);\n        \n        if (!ext) {\n          alert(`Unsupported conversion from ${sourceType} to ${targetType}`);\n          return;\n        }\n\n        try {\n          console.log(`Converting fragment ${id} from ${sourceType} to ${targetType} using extension .${ext}`);\n          const response = await getFragmentData(id, ext);\n          \n          if (!response.ok) {\n            const errorText = await response.text();\n            console.error('Conversion failed:', response.status, errorText);\n            throw new Error(`Conversion failed: ${response.status} - ${errorText}`);\n          }\n          \n          const blob = await response.blob();\n          const url = URL.createObjectURL(blob);\n          \n          // For text-based conversions, show in new window\n          if (targetType.startsWith('text/') || targetType === 'application/json' || targetType === 'application/yaml' || targetType === 'text/csv') {\n            const text = await blob.text();\n            \n            const newWindow = window.open('', '_blank');\n            newWindow.document.write(`\n              <html>\n                <head><title>Converted Fragment</title></head>\n                <body>\n                  <h2>Converted Fragment: ${id}</h2>\n                  <p><strong>From:</strong> ${sourceType}</p>\n                  <p><strong>To:</strong> ${targetType}</p>\n                  <hr>\n                  <pre style=\"white-space: pre-wrap; word-wrap: break-word;\">${text}</pre>\n                </body>\n              </html>\n            `);\n            newWindow.document.close();\n          } else {\n            // For images, open directly\n            window.open(url, '_blank');\n          }\n          \n          URL.revokeObjectURL(url);\n        } catch (err) {\n          console.error('Conversion error:', err);\n          alert(`Conversion error: ${err.message}`);\n        }\n      };\n    });\n\n  } catch (err) {\n    console.error('Failed to load fragments:', err);\n    fragmentsList.innerHTML = `<li>Error loading fragments: ${err.message}</li>`;\n  }\n}\n\n(async function init() {\n  // Initialize PWA features\n  registerServiceWorker();\n  setupInstallPrompt();\n  \n  // Initialize IndexedDB\n  try {\n    await fragmentDB.init();\n    console.log('IndexedDB initialized successfully');\n  } catch (error) {\n    console.error('Failed to initialize IndexedDB:', error);\n  }\n  \n  // Set up online/offline event listeners\n  window.addEventListener('online', () => {\n    console.log('Browser went online - triggering sync');\n    isOnline = true;\n    updateOfflineStatus();\n    // Force sync of offline actions\n    setTimeout(() => {\n      syncOfflineActions();\n    }, 1000); // Small delay to ensure network is ready\n  });\n  \n  window.addEventListener('offline', () => {\n    console.log('Browser went offline');\n    isOnline = false;\n    updateOfflineStatus();\n  });\n  \n  // Initial offline status\n  updateOfflineStatus();\n  \n  // Also listen for visibility changes (when user comes back to tab)\n  document.addEventListener('visibilitychange', () => {\n    if (!document.hidden && isOnline) {\n      console.log('Tab became visible - checking for offline actions');\n      syncOfflineActions();\n    }\n  });\n  \n  // Add periodic online check for Firefox compatibility\n  setInterval(async () => {\n    try {\n      // Try to make a simple network request to detect online status\n      const response = await fetch('/favicon.ico', { method: 'HEAD', cache: 'no-cache' });\n      if (response.ok && !isOnline) {\n        console.log('Network check detected online status - triggering sync');\n        isOnline = true;\n        updateOfflineStatus();\n        syncOfflineActions();\n      }\n    } catch (error) {\n      // Network request failed, we're offline\n      if (isOnline) {\n        console.log('Network check detected offline status');\n        isOnline = false;\n        updateOfflineStatus();\n      }\n    }\n  }, 5000); // Check every 5 seconds\n  \n  const url = new URL(window.location.href);\n\n  // Handle Hosted UI errors returned as query params\n  const oauthError = url.searchParams.get('error');\n  const oauthErrorDesc = url.searchParams.get('error_description');\n  if (oauthError) {\n    alert(`Sign-in error: ${decodeURIComponent(oauthErrorDesc || oauthError)}`);\n    history.replaceState({}, '', '/');\n  }\n\n  // Handle Cognito callback on any path if code param exists\n  if (url.searchParams.get('code')) {\n    const success = await handleCallback();\n    if (success) {\n      console.log('Cognito login successful!');\n      // Clear the URL parameters and update the UI\n      history.replaceState({}, '', '/');\n      // Update the authentication UI to show signed-in state\n      updateAuthUI();\n      return;\n    } else {\n      console.error('Cognito login failed or cancelled.');\n      alert('Login failed or cancelled.');\n      history.replaceState({}, '', '/');\n      return;\n    }\n  }\n\n  // Wire up authentication UI\n  const signInBtn = document.getElementById('signin');\n  const userStatus = document.getElementById('user-status');\n  const signOutBtn = document.getElementById('signout');\n  const loadFragmentsBtn = document.getElementById('load-fragments-btn');\n  \n  function updateAuthUI() {\n    if (isAuthenticated()) {\n      // User is signed in\n      if (signInBtn) signInBtn.classList.add('hidden');\n      if (userStatus) userStatus.classList.remove('hidden');\n    } else {\n      // User is not signed in\n      if (signInBtn) signInBtn.classList.remove('hidden');\n      if (userStatus) userStatus.classList.add('hidden');\n    }\n  }\n  \n  if (signInBtn) {\n    signInBtn.onclick = login;\n  }\n  \n  if (signOutBtn) {\n    signOutBtn.onclick = () => {\n      logout();\n      updateAuthUI();\n    };\n  }\n  \n  if (loadFragmentsBtn) {\n    loadFragmentsBtn.onclick = () => {\n      renderFragments();\n    };\n  }\n  \n  // Initialize auth UI\n  updateAuthUI();\n  \n  // Periodically check authentication status to keep UI in sync\n  setInterval(() => {\n    updateAuthUI();\n  }, 2000); // Check every 2 seconds\n\n\n  const typeSelect = document.getElementById('type');\n  const textArea = document.getElementById('content');\n  const imageDiv = document.getElementById('image-input');\n  const imageFile = document.getElementById('image-file');\n\n  // toggle inputs based on selected type\n  if (typeSelect) {\n    const toggleInputs = () => {\n      const t = typeSelect.value;\n      if (t.startsWith('image/')) {\n        textArea.style.display = 'none';\n        imageDiv.style.display = 'block';\n      } else {\n        textArea.style.display = 'block';\n        imageDiv.style.display = 'none';\n        \n        // Simple placeholder based on type\n        let placeholder = '';\n        switch (t) {\n          case 'text/plain':\n            placeholder = 'Enter plain text content...';\n            break;\n          case 'text/markdown':\n            placeholder = 'Enter markdown content...';\n            break;\n          case 'text/html':\n            placeholder = 'Enter HTML content...';\n            break;\n          case 'text/csv':\n            placeholder = 'Enter CSV content (comma-separated values)...';\n            break;\n          case 'application/json':\n            placeholder = 'Enter JSON content...';\n            break;\n          case 'application/yaml':\n            placeholder = 'Enter YAML content...';\n            break;\n          default:\n            placeholder = 'Enter content...';\n        }\n        \n        // Update textarea placeholder only\n        if (textArea) {\n          textArea.placeholder = placeholder;\n          textArea.value = ''; // Clear any existing content\n        }\n      }\n    };\n    typeSelect.addEventListener('change', toggleInputs);\n    toggleInputs(); // Initialize with current selection\n  }\n\n  // Add manual sync button\n  const syncBtn = document.createElement('button');\n  syncBtn.textContent = '🔄 Manual Sync Offline Actions';\n  syncBtn.className = 'btn btn-warning';\n  syncBtn.style.margin = '10px';\n  syncBtn.onclick = async () => {\n    console.log('Manual sync button clicked');\n    const actions = await fragmentDB.getOfflineActions();\n    console.log('Found offline actions:', actions);\n    if (actions.length > 0) {\n      await syncOfflineActions();\n    } else {\n      alert('No offline actions to sync');\n    }\n  };\n  \n  // Add clear offline actions button\n  const clearBtn = document.createElement('button');\n  clearBtn.textContent = '🗑️ Clear All Offline Actions';\n  clearBtn.className = 'btn btn-danger';\n  clearBtn.style.margin = '10px';\n  clearBtn.onclick = async () => {\n    console.log('Clear offline actions button clicked');\n    const actions = await fragmentDB.getOfflineActions();\n    console.log('Current offline actions before clear:', actions);\n    \n    // Clear all offline actions\n    for (const action of actions) {\n      await fragmentDB.removeOfflineAction(action.id);\n    }\n    \n    console.log('All offline actions cleared');\n    alert(`Cleared ${actions.length} offline actions`);\n  };\n  \n  // Insert sync button before load button\n  const loadBtn = document.getElementById('load-fragments');\n  if (loadBtn) {\n    loadBtn.parentNode.insertBefore(syncBtn, loadBtn);\n    loadBtn.parentNode.insertBefore(clearBtn, syncBtn);\n    loadBtn.onclick = async () => {\n      if (!isAuthenticated()) {\n        if (isLocalDevelopment()) {\n          // For local development, just load fragments directly\n          await renderFragments();\n        } else {\n          alert('Please sign in first.');\n        }\n        return;\n      }\n      await renderFragments();\n    };\n  }\n\n  const createForm = document.getElementById('create-form');\n  if (createForm) {\n    createForm.addEventListener('submit', async (e) => {\n      e.preventDefault();\n      if (!isAuthenticated()) {\n        if (isLocalDevelopment()) {\n          // For local development, allow creation without login\n        } else {\n          alert('Please sign in first.');\n          return;\n        }\n      }\n      const type = typeSelect?.value || 'text/plain';\n\n      try {\n        if (type.startsWith('image/')) {\n          if (!imageFile.files || imageFile.files.length === 0) {\n            alert('Please choose an image file.');\n            return;\n          }\n          const buf = await imageFile.files[0].arrayBuffer();\n          \n          if (isOnline) {\n            await createFragment(buf, type);\n          } else {\n            // Offline mode - queue for sync\n            await addOfflineAction({\n              type: 'CREATE',\n              data: { content: buf, type }\n            });\n            alert('Fragment queued for sync when online!');\n          }\n          \n          imageFile.value = '';\n        } else {\n          const content = (textArea?.value || '').trim();\n          if (!content) {\n            alert('Please enter some content.');\n            return;\n          }\n          \n          if (isOnline) {\n            await createFragment(content, type);\n          } else {\n            // Offline mode - queue for sync\n            await addOfflineAction({\n              type: 'CREATE',\n              data: { content, type }\n            });\n            alert('Fragment queued for sync when online!');\n          }\n          \n          textArea.value = '';\n        }\n        \n        if (isOnline) {\n          alert('Fragment created!');\n        }\n        await renderFragments();\n      } catch (err) {\n        console.error('Failed to create fragment:', err);\n        alert(`Error creating fragment: ${err.message}`);\n      }\n    });\n  }\n})();\n","import { COGNITO_DOMAIN, COGNITO_CLIENT_ID, COGNITO_REDIRECT_URI, COGNITO_SCOPES, API_URL } from './config';\n\nconst STORAGE_KEY = 'tokens';\n\nfunction base64UrlEncode(arrBuf) {\n  return btoa(String.fromCharCode(...new Uint8Array(arrBuf)))\n    .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\nasync function sha256(str) {\n  const data = new TextEncoder().encode(str);\n  const hash = await crypto.subtle.digest('SHA-256', data);\n  return base64UrlEncode(hash);\n}\n\nexport async function handleCallback() {\n  const url = new URL(window.location.href);\n  const code = url.searchParams.get('code');\n  if (!code) return false;\n\n  const verifier = sessionStorage.getItem('pkce_verifier');\n  if (!verifier) return false;\n\n  const body = new URLSearchParams({\n    grant_type: 'authorization_code',\n    client_id: COGNITO_CLIENT_ID,\n    code,\n    redirect_uri: COGNITO_REDIRECT_URI,\n    code_verifier: verifier,\n  });\n\n  const resp = await fetch(`${COGNITO_DOMAIN}/oauth2/token`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body,\n  });\n  if (!resp.ok) return false;\n\n  const tokens = await resp.json();\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(tokens));\n  history.replaceState({}, '', '/');\n  return true;\n}\n\nexport function getIdToken() {\n  const raw = localStorage.getItem(STORAGE_KEY);\n  if (!raw) return null;\n  try { return JSON.parse(raw)?.id_token || null; } catch { return null; }\n}\n\n// Check if we're in local development mode\nexport function isLocalDevelopment() {\n  return API_URL.includes('localhost') && window.location.hostname === 'localhost';\n}\n\n// For assignment submission, always use AWS Cognito authentication\nexport function isAuthenticated() {\n  return Boolean(getIdToken());\n}\n\n// Always use AWS Cognito login flow\nexport async function login() {\n  const verifier = base64UrlEncode(crypto.getRandomValues(new Uint8Array(32)));\n  const challenge = await sha256(verifier);\n  sessionStorage.setItem('pkce_verifier', verifier);\n\n  const params = new URLSearchParams({\n    client_id: COGNITO_CLIENT_ID,\n    response_type: 'code',\n    scope: COGNITO_SCOPES.join(' '),\n    redirect_uri: COGNITO_REDIRECT_URI,\n    code_challenge_method: 'S256',\n    code_challenge: challenge,\n  });\n\n  window.location = `${COGNITO_DOMAIN}/oauth2/authorize?${params.toString()}`;\n}\n\nexport function logout() {\n  localStorage.removeItem(STORAGE_KEY);\n  const params = new URLSearchParams({\n    client_id: COGNITO_CLIENT_ID,\n    logout_uri: COGNITO_REDIRECT_URI,\n  });\n  window.location = `${COGNITO_DOMAIN}/logout?${params.toString()}`;\n}\n","// For assignment submission, always use AWS\r\nexport const API_URL = 'http://fragments-lb-589502560.us-east-1.elb.amazonaws.com';\r\nexport const COGNITO_DOMAIN = 'https://us-east-1i0hiccnzl.auth.us-east-1.amazoncognito.com';\r\nexport const COGNITO_CLIENT_ID = '53lkg3nbp11fqunpjph06e9o77';\r\nexport const COGNITO_REDIRECT_URI = 'http://localhost:1234';\r\nexport const COGNITO_SCOPES = ['openid', 'email'];\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { API_URL } from './config';\nimport { getIdToken, isLocalDevelopment } from './auth';\n\nasync function request(path, opts = {}) {\n  const headers = new Headers(opts.headers || {});\n  \n  // Always use Cognito for assignment submission\n  const idToken = getIdToken();\n  if (idToken) {\n    headers.set('Authorization', `Bearer ${idToken}`);\n  }\n  \n  const resp = await fetch(`${API_URL}${path}`, { ...opts, headers });\n  return resp;\n}\n\nexport async function listFragments(expand = true) {\n  const r = await request(`/v1/fragments?expand=${expand ? '1' : '0'}`);\n  if (!r.ok) throw new Error('list failed');\n  return r.json();\n}\n\nexport async function createFragment(content, contentType) {\n  const r = await request('/v1/fragments', { method: 'POST', headers: { 'Content-Type': contentType }, body: content });\n  if (!r.ok) throw new Error('create failed');\n  return r.json();\n}\n\nexport async function deleteFragment(id) {\n  const r = await request(`/v1/fragments/${id}`, { method: 'DELETE' });\n  if (!r.ok) {\n    const errorMessage = `delete failed: ${r.status} ${r.statusText}`;\n    const error = new Error(errorMessage);\n    error.status = r.status;\n    error.statusText = r.statusText;\n    throw error;\n  }\n  return r.json();\n}\n\nexport async function updateFragment(id, content, contentType) {\n  const r = await request(`/v1/fragments/${id}`, { method: 'PUT', headers: { 'Content-Type': contentType }, body: content });\n  if (!r.ok) throw new Error('update failed');\n  return r.json();\n}\n\nexport async function getFragmentData(id, ext = '') {\n  const path = ext ? `/v1/fragments/${id}.${ext}` : `/v1/fragments/${id}`;\n  const r = await request(path);\n  if (!r.ok) throw new Error('get data failed');\n  return r;\n}\n\nexport async function getFragmentInfo(id) {\n  const r = await request(`/v1/fragments/${id}/info`);\n  if (!r.ok) throw new Error('get info failed');\n  return r.json();\n}\n","// IndexedDB service for offline data persistence\r\nclass FragmentDB {\r\n  constructor() {\r\n    this.dbName = 'FragmentsDB';\r\n    this.version = 1;\r\n    this.db = null;\r\n    this.initPromise = null;\r\n  }\r\n\r\n  // Initialize the database\r\n  async init() {\r\n    if (this.initPromise) {\r\n      return this.initPromise;\r\n    }\r\n\r\n    this.initPromise = new Promise((resolve, reject) => {\r\n      const request = indexedDB.open(this.dbName, this.version);\r\n\r\n      request.onerror = () => {\r\n        console.error('Failed to open database:', request.error);\r\n        reject(request.error);\r\n      };\r\n\r\n      request.onsuccess = () => {\r\n        this.db = request.result;\r\n        console.log('Database opened successfully');\r\n        resolve(this.db);\r\n      };\r\n\r\n      request.onupgradeneeded = (event) => {\r\n        const db = event.target.result;\r\n\r\n        // Create fragments store\r\n        if (!db.objectStoreNames.contains('fragments')) {\r\n          const fragmentStore = db.createObjectStore('fragments', { keyPath: 'id' });\r\n          fragmentStore.createIndex('ownerId', 'ownerId', { unique: false });\r\n          fragmentStore.createIndex('type', 'type', { unique: false });\r\n          fragmentStore.createIndex('created', 'created', { unique: false });\r\n        }\r\n\r\n        // Create offline actions store\r\n        if (!db.objectStoreNames.contains('offlineActions')) {\r\n          const actionStore = db.createObjectStore('offlineActions', { keyPath: 'id', autoIncrement: true });\r\n          actionStore.createIndex('type', 'type', { unique: false });\r\n          actionStore.createIndex('timestamp', 'timestamp', { unique: false });\r\n        }\r\n\r\n        // Create sync queue store\r\n        if (!db.objectStoreNames.contains('syncQueue')) {\r\n          const syncStore = db.createObjectStore('syncQueue', { keyPath: 'id', autoIncrement: true });\r\n          syncStore.createIndex('action', 'action', { unique: false });\r\n          syncStore.createIndex('timestamp', 'timestamp', { unique: false });\r\n        }\r\n\r\n        console.log('Database schema created/updated');\r\n      };\r\n    });\r\n\r\n    return this.initPromise;\r\n  }\r\n\r\n  // Fragment operations\r\n  async saveFragment(fragment) {\r\n    await this.init();\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['fragments'], 'readwrite');\r\n      const store = transaction.objectStore('fragments');\r\n      const request = store.put(fragment);\r\n\r\n      request.onsuccess = () => {\r\n        console.log('Fragment saved to IndexedDB:', fragment.id);\r\n        resolve(fragment);\r\n      };\r\n\r\n      request.onerror = () => {\r\n        console.error('Failed to save fragment:', request.error);\r\n        reject(request.error);\r\n      };\r\n    });\r\n  }\r\n\r\n  async getFragment(id) {\r\n    await this.init();\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['fragments'], 'readonly');\r\n      const store = transaction.objectStore('fragments');\r\n      const request = store.get(id);\r\n\r\n      request.onsuccess = () => {\r\n        resolve(request.result || null);\r\n      };\r\n\r\n      request.onerror = () => {\r\n        console.error('Failed to get fragment:', request.error);\r\n        reject(request.error);\r\n      };\r\n    });\r\n  }\r\n\r\n  async getAllFragments(ownerId) {\r\n    await this.init();\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['fragments'], 'readonly');\r\n      const store = transaction.objectStore('fragments');\r\n      const index = store.index('ownerId');\r\n      const request = index.getAll(ownerId);\r\n\r\n      request.onsuccess = () => {\r\n        resolve(request.result || []);\r\n      };\r\n\r\n      request.onerror = () => {\r\n        console.error('Failed to get fragments:', request.error);\r\n        reject(request.error);\r\n      };\r\n    });\r\n  }\r\n\r\n  async deleteFragment(id) {\r\n    await this.init();\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['fragments'], 'readwrite');\r\n      const store = transaction.objectStore('fragments');\r\n      const request = store.delete(id);\r\n\r\n      request.onsuccess = () => {\r\n        console.log('Fragment deleted from IndexedDB:', id);\r\n        resolve();\r\n      };\r\n\r\n      request.onerror = () => {\r\n        console.error('Failed to delete fragment:', request.error);\r\n        reject(request.error);\r\n      };\r\n    });\r\n  }\r\n\r\n  // Offline actions management\r\n  async addOfflineAction(action) {\r\n    await this.init();\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['offlineActions'], 'readwrite');\r\n      const store = transaction.objectStore('offlineActions');\r\n      \r\n      const offlineAction = {\r\n        ...action,\r\n        timestamp: Date.now(),\r\n        retryCount: 0\r\n      };\r\n\r\n      const request = store.add(offlineAction);\r\n\r\n      request.onsuccess = () => {\r\n        console.log('Offline action added:', offlineAction);\r\n        resolve(request.result);\r\n      };\r\n\r\n      request.onerror = () => {\r\n        console.error('Failed to add offline action:', request.error);\r\n        reject(request.error);\r\n      };\r\n    });\r\n  }\r\n\r\n  async getOfflineActions() {\r\n    await this.init();\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['offlineActions'], 'readonly');\r\n      const store = transaction.objectStore('offlineActions');\r\n      const request = store.getAll();\r\n\r\n      request.onsuccess = () => {\r\n        resolve(request.result || []);\r\n      };\r\n\r\n      request.onerror = () => {\r\n        console.error('Failed to get offline actions:', request.error);\r\n        reject(request.error);\r\n      };\r\n    });\r\n  }\r\n\r\n  async removeOfflineAction(id) {\r\n    await this.init();\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['offlineActions'], 'readwrite');\r\n      const store = transaction.objectStore('offlineActions');\r\n      const request = store.delete(id);\r\n\r\n      request.onsuccess = () => {\r\n        console.log('Offline action removed:', id);\r\n        resolve();\r\n      };\r\n\r\n      request.onerror = () => {\r\n        console.error('Failed to remove offline action:', request.error);\r\n        reject(request.error);\r\n      };\r\n    });\r\n  }\r\n\r\n  // Sync queue management\r\n  async addToSyncQueue(syncItem) {\r\n    await this.init();\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['syncQueue'], 'readwrite');\r\n      const store = transaction.objectStore('syncQueue');\r\n      \r\n      const queueItem = {\r\n        ...syncItem,\r\n        timestamp: Date.now(),\r\n        status: 'pending'\r\n      };\r\n\r\n      const request = store.add(queueItem);\r\n\r\n      request.onsuccess = () => {\r\n        console.log('Item added to sync queue:', queueItem);\r\n        resolve(request.result);\r\n      };\r\n\r\n      request.onerror = () => {\r\n        console.error('Failed to add to sync queue:', request.error);\r\n        reject(request.error);\r\n      };\r\n    });\r\n  }\r\n\r\n  async getSyncQueue() {\r\n    await this.init();\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['syncQueue'], 'readonly');\r\n      const store = transaction.objectStore('syncQueue');\r\n      const request = store.getAll();\r\n\r\n      request.onsuccess = () => {\r\n        resolve(request.result || []);\r\n      };\r\n\r\n      request.onerror = () => {\r\n        console.error('Failed to get sync queue:', request.error);\r\n        reject(request.error);\r\n      };\r\n    });\r\n  }\r\n\r\n  async removeFromSyncQueue(id) {\r\n    await this.init();\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['syncQueue'], 'readwrite');\r\n      const store = transaction.objectStore('syncQueue');\r\n      const request = store.delete(id);\r\n\r\n      request.onsuccess = () => {\r\n        console.log('Item removed from sync queue:', id);\r\n        resolve();\r\n      };\r\n\r\n      request.onerror = () => {\r\n        console.error('Failed to remove from sync queue:', request.error);\r\n        reject(request.error);\r\n      };\r\n    });\r\n  }\r\n\r\n  // Utility methods\r\n  async clearAll() {\r\n    await this.init();\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['fragments', 'offlineActions', 'syncQueue'], 'readwrite');\r\n      \r\n      const fragmentStore = transaction.objectStore('fragments');\r\n      const actionStore = transaction.objectStore('offlineActions');\r\n      const syncStore = transaction.objectStore('syncQueue');\r\n\r\n      const fragmentRequest = fragmentStore.clear();\r\n      const actionRequest = actionStore.clear();\r\n      const syncRequest = syncStore.clear();\r\n\r\n      transaction.oncomplete = () => {\r\n        console.log('All data cleared from IndexedDB');\r\n        resolve();\r\n      };\r\n\r\n      transaction.onerror = () => {\r\n        console.error('Failed to clear data:', transaction.error);\r\n        reject(transaction.error);\r\n      };\r\n    });\r\n  }\r\n\r\n  async getDatabaseSize() {\r\n    await this.init();\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['fragments', 'offlineActions', 'syncQueue'], 'readonly');\r\n      \r\n      const fragmentStore = transaction.objectStore('fragments');\r\n      const actionStore = transaction.objectStore('offlineActions');\r\n      const syncStore = transaction.objectStore('syncQueue');\r\n\r\n      const fragmentRequest = fragmentStore.count();\r\n      const actionRequest = actionStore.count();\r\n      const syncRequest = syncStore.count();\r\n\r\n      let counts = { fragments: 0, actions: 0, sync: 0 };\r\n\r\n      fragmentRequest.onsuccess = () => {\r\n        counts.fragments = fragmentRequest.result;\r\n      };\r\n\r\n      actionRequest.onsuccess = () => {\r\n        counts.actions = actionRequest.result;\r\n      };\r\n\r\n      syncRequest.onsuccess = () => {\r\n        counts.sync = syncRequest.result;\r\n      };\r\n\r\n      transaction.oncomplete = () => {\r\n        resolve(counts);\r\n      };\r\n\r\n      transaction.onerror = () => {\r\n        reject(transaction.error);\r\n      };\r\n    });\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nconst fragmentDB = new FragmentDB();\r\nexport default fragmentDB;\r\n\r\n","// Service Worker Registration Module\nexport function registerServiceWorker() {\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', async () => {\n      try {\n        // Use dynamic import for service worker to be Parcel-compatible\n        const registration = await navigator.serviceWorker.register(\n          new URL('./sw.js', import.meta.url),\n          { scope: './' }\n        );\n        \n        console.log('Service Worker registered successfully:', registration.scope);\n        \n        // Check for updates\n        registration.addEventListener('updatefound', () => {\n          const newWorker = registration.installing;\n          newWorker.addEventListener('statechange', () => {\n            if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n              console.log('New version available');\n              // You can show a notification to the user here\n            }\n          });\n        });\n      } catch (error) {\n        console.error('Service Worker registration failed:', error);\n      }\n    });\n    \n    // Handle offline/online status\n    window.addEventListener('online', () => {\n      console.log('App is online');\n      document.body.classList.remove('offline');\n      // Trigger sync when back online\n      if (navigator.serviceWorker.controller) {\n        navigator.serviceWorker.controller.postMessage({ type: 'SYNC' });\n      }\n    });\n    \n    window.addEventListener('offline', () => {\n      console.log('App is offline');\n      document.body.classList.add('offline');\n    });\n  }\n}\n\n// PWA Install prompt\nexport function setupInstallPrompt() {\n  let deferredPrompt;\n  window.addEventListener('beforeinstallprompt', (e) => {\n    e.preventDefault();\n    deferredPrompt = e;\n    \n    // Show install button\n    const installButton = document.getElementById('install-app');\n    if (installButton) {\n      installButton.style.display = 'block';\n      installButton.onclick = () => {\n        if (deferredPrompt) {\n          deferredPrompt.prompt();\n          deferredPrompt.userChoice.then((choiceResult) => {\n            if (choiceResult.outcome === 'accepted') {\n              console.log('User accepted the install prompt');\n              installButton.style.display = 'none';\n            } else {\n              console.log('User dismissed the install prompt');\n            }\n            deferredPrompt = null;\n          });\n        }\n      };\n    }\n  });\n}\n","module.exports = parcelRequire.resolve(\"sw.js\");"],"names":[],"version":3,"file":"fragments-ui.0f77c784.js.map","sourceRoot":"/__parcel_source_root/"}